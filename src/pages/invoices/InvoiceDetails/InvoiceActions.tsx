import { FunctionComponent, useState } from "react";
import { Colors } from "../../../GlobalStyles/theme";
import { ModalBox, ModalContainer } from "../../settings/style";
import cancelIcon from "../../../assets/cancel.svg";
import { Flex, Span, Text } from "../../../GlobalStyles/CustomizableGlobal.style";
import { Button } from "../../../components/button/Button";

const UpdatePayment = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M6.63022 2.66602H9.37155C10.5969 2.66602 11.5676 2.66602 12.3269 2.76802C13.1082 2.87335 13.7409 3.09468 14.2402 3.59335C14.7389 4.09268 14.9602 4.72535 15.0656 5.50668C15.1256 5.95535 15.1502 6.47735 15.1602 7.08202C15.1689 7.13269 15.1698 7.1844 15.1629 7.23535C15.1676 7.61268 15.1676 8.02068 15.1676 8.46202V8.53668C15.1676 9.76202 15.1676 10.7327 15.0656 11.492C14.9602 12.2733 14.7389 12.906 14.2402 13.4053C13.7409 13.904 13.1082 14.1253 12.3269 14.2307C11.5669 14.3327 10.5969 14.3327 9.37155 14.3327H6.63022C5.40489 14.3327 4.43422 14.3327 3.67489 14.2307C2.89355 14.1253 2.26089 13.904 1.76155 13.4053C1.26289 12.906 1.04155 12.2733 0.936219 11.492C0.834219 10.732 0.834219 9.76202 0.834219 8.53668V8.46202C0.834219 8.02068 0.834219 7.61268 0.838885 7.23535C0.831737 7.18443 0.832412 7.13273 0.840885 7.08202C0.851552 6.47735 0.876219 5.95535 0.936219 5.50668C1.04155 4.72535 1.26289 4.09268 1.76155 3.59335C2.26089 3.09468 2.89355 2.87335 3.67489 2.76802C4.43489 2.66602 5.40489 2.66602 6.63022 2.66602ZM1.83555 7.66602C1.83422 7.92468 1.83422 8.20202 1.83422 8.49935C1.83422 9.77068 1.83555 10.6733 1.92755 11.3594C2.01755 12.0294 2.18689 12.416 2.46889 12.698C2.75089 12.98 3.13755 13.1493 3.80822 13.2393C4.49355 13.3313 5.39622 13.3327 6.66755 13.3327H9.33422C10.6056 13.3327 11.5089 13.3313 12.1942 13.2393C12.8642 13.1493 13.2509 12.98 13.5329 12.698C13.8149 12.416 13.9842 12.0293 14.0742 11.3587C14.1662 10.6733 14.1676 9.77068 14.1676 8.49935C14.1676 8.20202 14.1676 7.92468 14.1662 7.66602H1.83555ZM14.1502 6.66602H1.85155C1.86489 6.27468 1.88755 5.93668 1.92755 5.63935C2.01755 4.96935 2.18689 4.58268 2.46889 4.30068C2.75089 4.01868 3.13755 3.84935 3.80822 3.75935C4.49355 3.66735 5.39622 3.66602 6.66755 3.66602H9.33422C10.6056 3.66602 11.5089 3.66735 12.1942 3.75935C12.8642 3.84935 13.2509 4.01868 13.5329 4.30068C13.8149 4.58268 13.9842 4.96935 14.0742 5.64002C14.1142 5.93668 14.1369 6.27468 14.1502 6.66602ZM3.50089 11.166C3.50089 11.0334 3.55356 10.9062 3.64733 10.8125C3.7411 10.7187 3.86828 10.666 4.00089 10.666H6.66755C6.80016 10.666 6.92734 10.7187 7.0211 10.8125C7.11487 10.9062 7.16755 11.0334 7.16755 11.166C7.16755 11.2986 7.11487 11.4258 7.0211 11.5196C6.92734 11.6133 6.80016 11.666 6.66755 11.666H4.00089C3.86828 11.666 3.7411 11.6133 3.64733 11.5196C3.55356 11.4258 3.50089 11.2986 3.50089 11.166ZM7.83422 11.166C7.83422 11.0334 7.8869 10.9062 7.98067 10.8125C8.07443 10.7187 8.20161 10.666 8.33422 10.666H9.33422C9.46683 10.666 9.594 10.7187 9.68777 10.8125C9.78154 10.9062 9.83422 11.0334 9.83422 11.166C9.83422 11.2986 9.78154 11.4258 9.68777 11.5196C9.594 11.6133 9.46683 11.666 9.33422 11.666H8.33422C8.20161 11.666 8.07443 11.6133 7.98067 11.5196C7.8869 11.4258 7.83422 11.2986 7.83422 11.166Z" fill="black"/>
    </svg>
  );
};

const Shipped = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M2.63732 2H13.364C13.6526 2 13.9173 2 14.132 2.02867C14.3693 2.06067 14.6193 2.13533 14.8253 2.342C15.032 2.548 15.1067 2.798 15.1387 3.03533C15.1673 3.25067 15.1673 3.51533 15.1673 3.80333V3.86333C15.1673 4.152 15.1673 4.41667 15.1387 4.63133C15.1067 4.86867 15.032 5.11867 14.8253 5.32467C14.63 5.52067 14.394 5.598 14.1673 5.63267V9.204C14.1673 10.4293 14.1673 11.4 14.0653 12.1593C13.96 12.9407 13.7386 13.5733 13.24 14.0727C12.7407 14.5713 12.108 14.7927 11.3267 14.898C10.5667 15 9.59665 15 8.37132 15H7.62998C6.40465 15 5.43398 15 4.67465 14.898C3.89332 14.7927 3.26065 14.5713 2.76132 14.0727C2.26265 13.5733 2.04132 12.9407 1.93598 12.1593C1.83398 11.3993 1.83398 10.4293 1.83398 9.204V5.63333C1.60732 5.59867 1.37132 5.52133 1.17598 5.32533C0.969318 5.11933 0.894651 4.86933 0.862651 4.632C0.833984 4.41667 0.833984 4.152 0.833984 3.864V3.804C0.833984 3.51533 0.833984 3.25067 0.862651 3.036C0.894651 2.79867 0.969318 2.54867 1.17598 2.34267C1.38198 2.136 1.63198 2.06133 1.86932 2.02933C2.08465 2.00067 2.34932 2 2.63732 2ZM2.83398 5.66667V9.16667C2.83398 10.438 2.83532 11.3413 2.92732 12.0267C3.01732 12.6967 3.18665 13.0833 3.46865 13.3653C3.75065 13.6473 4.13732 13.8167 4.80798 13.9067C5.49332 13.9987 6.39598 14 7.66732 14H8.33398C9.60532 14 10.508 13.9987 11.194 13.9067C11.864 13.8167 12.2507 13.6473 12.5327 13.3653C12.8147 13.0833 12.984 12.6967 13.074 12.026C13.166 11.3413 13.1673 10.438 13.1673 9.16667V5.66667H2.83398ZM1.88265 3.04867L1.88465 3.048C1.92261 3.03362 1.96227 3.02421 2.00265 3.02C2.14265 3.00133 2.33865 3 2.66732 3H13.334C13.6627 3 13.8587 3.00133 13.9987 3.02C14.039 3.02419 14.0787 3.0336 14.1167 3.048L14.1187 3.04867L14.1193 3.05067C14.1337 3.08862 14.1431 3.12829 14.1473 3.16867C14.166 3.30867 14.1673 3.50467 14.1673 3.83333C14.1673 4.162 14.166 4.358 14.1473 4.498C14.1431 4.53838 14.1337 4.57805 14.1193 4.616L14.1187 4.618L14.1167 4.61867C14.0787 4.63306 14.039 4.64248 13.9987 4.64667C13.8587 4.66533 13.6627 4.66667 13.334 4.66667H2.66732C2.33865 4.66667 2.14265 4.66533 2.00265 4.64667C1.96227 4.64246 1.92261 4.63305 1.88465 4.61867L1.88265 4.618L1.88198 4.616C1.8676 4.57804 1.85819 4.53838 1.85398 4.498C1.83532 4.358 1.83398 4.162 1.83398 3.83333C1.83398 3.50467 1.83532 3.30867 1.85398 3.16867C1.85819 3.12829 1.8676 3.08863 1.88198 3.05067L1.88265 3.04867ZM10.0007 7.46C10.0994 7.54829 10.159 7.67215 10.1665 7.80439C10.174 7.93663 10.1288 8.06644 10.0407 8.16533L7.65998 10.832C7.61308 10.8845 7.55561 10.9266 7.49133 10.9554C7.42705 10.9841 7.35741 10.999 7.28698 10.999C7.21655 10.999 7.14692 10.9841 7.08264 10.9554C7.01836 10.9266 6.96089 10.8845 6.91398 10.832L5.96198 9.76533C5.91497 9.71697 5.87822 9.65959 5.85396 9.59666C5.82969 9.53372 5.81841 9.46653 5.8208 9.39912C5.82318 9.33171 5.83918 9.26548 5.86784 9.20441C5.89649 9.14335 5.9372 9.08871 5.98752 9.04379C6.03784 8.99888 6.09673 8.9646 6.16064 8.94304C6.22455 8.92147 6.29216 8.91306 6.35941 8.91832C6.42666 8.92357 6.49215 8.94237 6.55194 8.97359C6.61173 9.00482 6.66458 9.04781 6.70732 9.1L7.28732 9.74867L9.29398 7.5C9.38228 7.40127 9.50614 7.34161 9.63838 7.33411C9.77062 7.32661 9.90043 7.37189 9.99932 7.46H10.0007Z" fill="black"/>
    </svg>
  );
};

const VoidInvoice = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
      <path d="M3.75736 4.25736C6.10051 1.91421 9.89947 1.91421 12.2427 4.25736C14.5858 6.60051 14.5858 10.3995 12.2427 12.7427C9.89947 15.0858 6.10051 15.0858 3.75736 12.7427C1.41421 10.3995 1.41421 6.60051 3.75736 4.25736Z" stroke="#130F26" stroke-linecap="round"/>
      <path d="M3.75736 4.25736C6.10051 1.91421 9.89947 1.91421 12.2427 4.25736C14.5858 6.60051 14.5858 10.3995 12.2427 12.7427C9.89947 15.0858 6.10051 15.0858 3.75736 12.7427C1.41421 10.3995 1.41421 6.60051 3.75736 4.25736Z" stroke="black" stroke-opacity="0.2" stroke-linecap="round"/>
      <path d="M4 4.5L12 12.5" stroke="#130F26" stroke-linecap="round"/>
      <path d="M4 4.5L12 12.5" stroke="black" stroke-opacity="0.2" stroke-linecap="round"/>
    </svg>
  );
};

const SendMail = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
      <path d="M5.99935 6.5L8.99935 8.5L11.9993 6.5M1.99935 9.5H3.33268M0.666016 7.5H3.33268" stroke="#130F26" stroke-width="0.8" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M5.99935 6.5L8.99935 8.5L11.9993 6.5M1.99935 9.5H3.33268M0.666016 7.5H3.33268" stroke="black" stroke-opacity="0.2" stroke-width="0.8" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M3.33203 5.50065V5.16732C3.33203 4.8137 3.47251 4.47456 3.72256 4.22451C3.9726 3.97446 4.31174 3.83398 4.66536 3.83398H13.332C13.6857 3.83398 14.0248 3.97446 14.2748 4.22451C14.5249 4.47456 14.6654 4.8137 14.6654 5.16732V11.834C14.6654 12.1876 14.5249 12.5267 14.2748 12.7768C14.0248 13.0268 13.6857 13.1673 13.332 13.1673H4.66536C4.31174 13.1673 3.9726 13.0268 3.72256 12.7768C3.47251 12.5267 3.33203 12.1876 3.33203 11.834V11.5007" stroke="#130F26" stroke-width="0.8" stroke-linecap="round"/>
      <path d="M3.33203 5.50065V5.16732C3.33203 4.8137 3.47251 4.47456 3.72256 4.22451C3.9726 3.97446 4.31174 3.83398 4.66536 3.83398H13.332C13.6857 3.83398 14.0248 3.97446 14.2748 4.22451C14.5249 4.47456 14.6654 4.8137 14.6654 5.16732V11.834C14.6654 12.1876 14.5249 12.5267 14.2748 12.7768C14.0248 13.0268 13.6857 13.1673 13.332 13.1673H4.66536C4.31174 13.1673 3.9726 13.0268 3.72256 12.7768C3.47251 12.5267 3.33203 12.1876 3.33203 11.834V11.5007" stroke="black" stroke-opacity="0.2" stroke-width="0.8" stroke-linecap="round"/>
    </svg>
  );
};

const Duplicate = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
      <path d="M13.875 10C13.875 10.0995 13.8355 10.1948 13.7652 10.2652C13.6948 10.3355 13.5995 10.375 13.5 10.375H11.875V11.625H13C13.0995 11.625 13.1948 11.6645 13.2652 11.7348C13.3355 11.8052 13.375 11.9005 13.375 12C13.375 12.0995 13.3355 12.1948 13.2652 12.2652C13.1948 12.3355 13.0995 12.375 13 12.375H11.875V13.5C11.875 13.5995 11.8355 13.6948 11.7652 13.7652C11.6948 13.8355 11.5995 13.875 11.5 13.875C11.4005 13.875 11.3052 13.8355 11.2348 13.7652C11.1645 13.6948 11.125 13.5995 11.125 13.5V10C11.125 9.90054 11.1645 9.80516 11.2348 9.73483C11.3052 9.66451 11.4005 9.625 11.5 9.625H13.5C13.5995 9.625 13.6948 9.66451 13.7652 9.73483C13.8355 9.80516 13.875 9.90054 13.875 10ZM5.625 11.25C5.625 11.681 5.45379 12.0943 5.14905 12.399C4.8443 12.7038 4.43098 12.875 4 12.875H3.375V13.5C3.375 13.5995 3.33549 13.6948 3.26517 13.7652C3.19484 13.8355 3.09946 13.875 3 13.875C2.90054 13.875 2.80516 13.8355 2.73483 13.7652C2.66451 13.6948 2.625 13.5995 2.625 13.5V10C2.625 9.90054 2.66451 9.80516 2.73483 9.73483C2.80516 9.66451 2.90054 9.625 3 9.625H4C4.43098 9.625 4.8443 9.7962 5.14905 10.101C5.45379 10.4057 5.625 10.819 5.625 11.25ZM4.875 11.25C4.875 11.0179 4.78281 10.7954 4.61872 10.6313C4.45462 10.4672 4.23206 10.375 4 10.375H3.375V12.125H4C4.23206 12.125 4.45462 12.0328 4.61872 11.8687C4.78281 11.7046 4.875 11.4821 4.875 11.25ZM10.125 11.75C10.125 12.3136 9.90112 12.8541 9.5026 13.2526C9.10409 13.6511 8.56359 13.875 8 13.875H7C6.90054 13.875 6.80516 13.8355 6.73484 13.7652C6.66451 13.6948 6.625 13.5995 6.625 13.5V10C6.625 9.90054 6.66451 9.80516 6.73484 9.73483C6.80516 9.66451 6.90054 9.625 7 9.625H8C8.56359 9.625 9.10409 9.84888 9.5026 10.2474C9.90112 10.6459 10.125 11.1864 10.125 11.75ZM9.375 11.75C9.375 11.3853 9.23013 11.0356 8.97227 10.7777C8.71441 10.5199 8.36467 10.375 8 10.375H7.375V13.125H8C8.36467 13.125 8.71441 12.9801 8.97227 12.7223C9.23013 12.4644 9.375 12.1147 9.375 11.75ZM2.625 7.5V3C2.625 2.76794 2.71719 2.54538 2.88128 2.38128C3.04538 2.21719 3.26794 2.125 3.5 2.125H9.5C9.54933 2.12496 9.59819 2.13466 9.64377 2.15353C9.68935 2.17241 9.73076 2.20009 9.76562 2.235L13.2656 5.735C13.3357 5.80536 13.3751 5.90067 13.375 6V7.5C13.375 7.59946 13.3355 7.69484 13.2652 7.76516C13.1948 7.83549 13.0995 7.875 13 7.875C12.9005 7.875 12.8052 7.83549 12.7348 7.76516C12.6645 7.69484 12.625 7.59946 12.625 7.5V6.375H9.5C9.40054 6.375 9.30516 6.33549 9.23483 6.26516C9.16451 6.19484 9.125 6.09946 9.125 6V2.875H3.5C3.46685 2.875 3.43505 2.88817 3.41161 2.91161C3.38817 2.93505 3.375 2.96685 3.375 3V7.5C3.375 7.59946 3.33549 7.69484 3.26517 7.76516C3.19484 7.83549 3.09946 7.875 3 7.875C2.90054 7.875 2.80516 7.83549 2.73483 7.76516C2.66451 7.69484 2.625 7.59946 2.625 7.5ZM9.875 5.625H12.095L9.875 3.405V5.625Z" fill="#130F26"/>
      <path d="M13.875 10C13.875 10.0995 13.8355 10.1948 13.7652 10.2652C13.6948 10.3355 13.5995 10.375 13.5 10.375H11.875V11.625H13C13.0995 11.625 13.1948 11.6645 13.2652 11.7348C13.3355 11.8052 13.375 11.9005 13.375 12C13.375 12.0995 13.3355 12.1948 13.2652 12.2652C13.1948 12.3355 13.0995 12.375 13 12.375H11.875V13.5C11.875 13.5995 11.8355 13.6948 11.7652 13.7652C11.6948 13.8355 11.5995 13.875 11.5 13.875C11.4005 13.875 11.3052 13.8355 11.2348 13.7652C11.1645 13.6948 11.125 13.5995 11.125 13.5V10C11.125 9.90054 11.1645 9.80516 11.2348 9.73483C11.3052 9.66451 11.4005 9.625 11.5 9.625H13.5C13.5995 9.625 13.6948 9.66451 13.7652 9.73483C13.8355 9.80516 13.875 9.90054 13.875 10ZM5.625 11.25C5.625 11.681 5.45379 12.0943 5.14905 12.399C4.8443 12.7038 4.43098 12.875 4 12.875H3.375V13.5C3.375 13.5995 3.33549 13.6948 3.26517 13.7652C3.19484 13.8355 3.09946 13.875 3 13.875C2.90054 13.875 2.80516 13.8355 2.73483 13.7652C2.66451 13.6948 2.625 13.5995 2.625 13.5V10C2.625 9.90054 2.66451 9.80516 2.73483 9.73483C2.80516 9.66451 2.90054 9.625 3 9.625H4C4.43098 9.625 4.8443 9.7962 5.14905 10.101C5.45379 10.4057 5.625 10.819 5.625 11.25ZM4.875 11.25C4.875 11.0179 4.78281 10.7954 4.61872 10.6313C4.45462 10.4672 4.23206 10.375 4 10.375H3.375V12.125H4C4.23206 12.125 4.45462 12.0328 4.61872 11.8687C4.78281 11.7046 4.875 11.4821 4.875 11.25ZM10.125 11.75C10.125 12.3136 9.90112 12.8541 9.5026 13.2526C9.10409 13.6511 8.56359 13.875 8 13.875H7C6.90054 13.875 6.80516 13.8355 6.73484 13.7652C6.66451 13.6948 6.625 13.5995 6.625 13.5V10C6.625 9.90054 6.66451 9.80516 6.73484 9.73483C6.80516 9.66451 6.90054 9.625 7 9.625H8C8.56359 9.625 9.10409 9.84888 9.5026 10.2474C9.90112 10.6459 10.125 11.1864 10.125 11.75ZM9.375 11.75C9.375 11.3853 9.23013 11.0356 8.97227 10.7777C8.71441 10.5199 8.36467 10.375 8 10.375H7.375V13.125H8C8.36467 13.125 8.71441 12.9801 8.97227 12.7223C9.23013 12.4644 9.375 12.1147 9.375 11.75ZM2.625 7.5V3C2.625 2.76794 2.71719 2.54538 2.88128 2.38128C3.04538 2.21719 3.26794 2.125 3.5 2.125H9.5C9.54933 2.12496 9.59819 2.13466 9.64377 2.15353C9.68935 2.17241 9.73076 2.20009 9.76562 2.235L13.2656 5.735C13.3357 5.80536 13.3751 5.90067 13.375 6V7.5C13.375 7.59946 13.3355 7.69484 13.2652 7.76516C13.1948 7.83549 13.0995 7.875 13 7.875C12.9005 7.875 12.8052 7.83549 12.7348 7.76516C12.6645 7.69484 12.625 7.59946 12.625 7.5V6.375H9.5C9.40054 6.375 9.30516 6.33549 9.23483 6.26516C9.16451 6.19484 9.125 6.09946 9.125 6V2.875H3.5C3.46685 2.875 3.43505 2.88817 3.41161 2.91161C3.38817 2.93505 3.375 2.96685 3.375 3V7.5C3.375 7.59946 3.33549 7.69484 3.26517 7.76516C3.19484 7.83549 3.09946 7.875 3 7.875C2.90054 7.875 2.80516 7.83549 2.73483 7.76516C2.66451 7.69484 2.625 7.59946 2.625 7.5ZM9.875 5.625H12.095L9.875 3.405V5.625Z" fill="black" fill-opacity="0.2"/>
    </svg>
  );
};

const Print = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
      <path d="M14.6673 8.5C14.6673 10.3853 14.6673 11.3287 14.0813 11.914C13.654 12.342 13.0367 12.4573 12.0007 12.4887M4.00065 12.4887C2.96532 12.4573 2.34732 12.342 1.91998 11.914C1.33398 11.3287 1.33398 10.3853 1.33398 8.5C1.33398 6.61467 1.33398 5.67133 1.91998 5.086C2.50532 4.5 3.44865 4.5 5.33398 4.5H10.6673C12.5527 4.5 13.496 4.5 14.0813 5.086C14.2813 5.286 14.4133 5.52733 14.5 5.83333M6.00065 7.16667H4.00065M12.6673 10.5H3.33398" stroke="#130F26" stroke-width="0.8" stroke-linecap="round"/>
      <path d="M14.6673 8.5C14.6673 10.3853 14.6673 11.3287 14.0813 11.914C13.654 12.342 13.0367 12.4573 12.0007 12.4887M4.00065 12.4887C2.96532 12.4573 2.34732 12.342 1.91998 11.914C1.33398 11.3287 1.33398 10.3853 1.33398 8.5C1.33398 6.61467 1.33398 5.67133 1.91998 5.086C2.50532 4.5 3.44865 4.5 5.33398 4.5H10.6673C12.5527 4.5 13.496 4.5 14.0813 5.086C14.2813 5.286 14.4133 5.52733 14.5 5.83333M6.00065 7.16667H4.00065M12.6673 10.5H3.33398" stroke="black" stroke-opacity="0.2" stroke-width="0.8" stroke-linecap="round"/>
      <path d="M11.9887 4.50065C11.9573 3.46532 11.842 2.84732 11.414 2.41998C10.8287 1.83398 9.88533 1.83398 8 1.83398C6.11467 1.83398 5.17133 1.83398 4.586 2.41998C4.158 2.84732 4.04267 3.46532 4.01133 4.50065M12 10.5007V11.1673C12 13.0527 12 13.996 11.414 14.5813C10.9867 15.0093 10.3693 15.1247 9.33333 15.156M4 10.5007V11.1673C4 13.0527 4 13.996 4.586 14.5813C5.01333 15.0093 5.63133 15.1247 6.66667 15.156" stroke="#130F26" stroke-width="0.8" stroke-linecap="round"/>
      <path d="M11.9887 4.50065C11.9573 3.46532 11.842 2.84732 11.414 2.41998C10.8287 1.83398 9.88533 1.83398 8 1.83398C6.11467 1.83398 5.17133 1.83398 4.586 2.41998C4.158 2.84732 4.04267 3.46532 4.01133 4.50065M12 10.5007V11.1673C12 13.0527 12 13.996 11.414 14.5813C10.9867 15.0093 10.3693 15.1247 9.33333 15.156M4 10.5007V11.1673C4 13.0527 4 13.996 4.586 14.5813C5.01333 15.0093 5.63133 15.1247 6.66667 15.156" stroke="black" stroke-opacity="0.2" stroke-width="0.8" stroke-linecap="round"/>
      <path d="M11.6013 7.16667C11.6013 7.31394 11.4819 7.43333 11.3346 7.43333C11.1874 7.43333 11.068 7.31394 11.068 7.16667C11.068 7.01939 11.1874 6.9 11.3346 6.9C11.4819 6.9 11.6013 7.01939 11.6013 7.16667Z" fill="white"/>
      <path d="M11.6013 7.16667C11.6013 7.31394 11.4819 7.43333 11.3346 7.43333C11.1874 7.43333 11.068 7.31394 11.068 7.16667C11.068 7.01939 11.1874 6.9 11.3346 6.9C11.4819 6.9 11.6013 7.01939 11.6013 7.16667Z" stroke="#130F26" stroke-width="0.8"/>
      <path d="M11.6013 7.16667C11.6013 7.31394 11.4819 7.43333 11.3346 7.43333C11.1874 7.43333 11.068 7.31394 11.068 7.16667C11.068 7.01939 11.1874 6.9 11.3346 6.9C11.4819 6.9 11.6013 7.01939 11.6013 7.16667Z" stroke="black" stroke-opacity="0.2" stroke-width="0.8"/>
    </svg>
  );
};

const Bin = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
      <path d="M4.00065 13.1667C4.00065 13.5203 4.14113 13.8594 4.39118 14.1095C4.64122 14.3595 4.98036 14.5 5.33398 14.5H10.6673C11.0209 14.5 11.3601 14.3595 11.6101 14.1095C11.8602 13.8594 12.0007 13.5203 12.0007 13.1667V5.16667H4.00065V13.1667ZM5.33398 6.5H10.6673V13.1667H5.33398V6.5ZM10.334 3.16667L9.66732 2.5H6.33398L5.66732 3.16667H3.33398V4.5H12.6673V3.16667H10.334Z" fill="#F65151"/>
    </svg>
  );
};

interface IProps {
  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;
}

const InvoiceActions: FunctionComponent<IProps> = ({ setShowModal }) => {
  const [showDelete, setShowDelete] = useState<boolean>(false);

  const handleDelete = () => {};

  return (
    <>
      <ModalContainer>
        <ModalBox width="35%" style={{ position: "absolute", bottom: "0" }}>
          <h3
            style={{
              marginBottom: "32px",
              justifyContent: "space-between",
              alignItems: "center",
              display: "flex",
              color: Colors.primaryColor,
            }}
          >
            <span>Select an Action</span>
            <button
              onClick={() => setShowModal(false)}
              style={{ background: "transparent", border: "1px solid black" }}
            >
              <img src={cancelIcon} alt="" />
            </button>
          </h3>
          <Flex direction="column" gap="1rem">
            <Flex alignItems="center" gap="0.5rem" cursor="pointer">
              <UpdatePayment />
              <Text color={Colors.blackishBlue} fontSize="1rem">
                Update Payment
              </Text>
            </Flex>

            <Flex alignItems="center" gap="0.5rem" cursor="pointer">
              <Shipped />
              <Text color={Colors.blackishBlue} fontSize="1rem">
                Mark as Shipped/Settled
              </Text>
            </Flex>

            <Flex alignItems="center" gap="0.5rem" cursor="pointer">
              <VoidInvoice />
              <Text color={Colors.blackishBlue} fontSize="1rem">
                Void Invoice
              </Text>
            </Flex>

            <Flex alignItems="center" gap="0.5rem" cursor="pointer">
              <SendMail />
              <Text color={Colors.blackishBlue} fontSize="1rem">
                Send to Mail
              </Text>
            </Flex>

            <Flex alignItems="center" gap="0.5rem" cursor="pointer">
              <Duplicate />
              <Text color={Colors.blackishBlue} fontSize="1rem">
                Duplicate
              </Text>
            </Flex>

            <Flex alignItems="center" gap="0.5rem" cursor="pointer">
              <Duplicate />
              <Text color={Colors.blackishBlue} fontSize="1rem">
                Download PDF
              </Text>
            </Flex>

            <Flex alignItems="center" gap="0.5rem" cursor="pointer">
              <Print />
              <Text color={Colors.blackishBlue} fontSize="1rem">
                Print Invoice
              </Text>
            </Flex>

            <Flex
              alignItems="center"
              gap="0.5rem"
              cursor="pointer"
              onClick={() => setShowDelete(true)}
            >
              <Bin />
              <Text color={Colors.red} fontSize="1rem">
                Delete Invoice
              </Text>
            </Flex>
          </Flex>
        </ModalBox>
      </ModalContainer>

      {showDelete && (
        <ModalContainer>
          <ModalBox width="30%">
            <Flex
              style={{
                marginBottom: "32px",
                justifyContent: "space-between",
                alignItems: "center",
                display: "flex",
              }}
            >
              <Flex gap="0.5rem" alignItems="center">
                <h3
                  style={{
                    color: Colors.red,
                    fontSize: "1.75rem",
                  }}
                >
                  Attention
                </h3>
              </Flex>
              <button
                onClick={() => setShowDelete(false)}
                style={{ background: "transparent", border: "none" }}
              >
                <img src={cancelIcon} alt="" />
              </button>
            </Flex>
            <Text color={Colors.blackishBlue}>
              Are you sure you want to delete invoice <Span fontWeight="600">INV_0132933</Span>?
            </Text>
            <Flex gap="0.75rem">
              <Button
                label={"Cancel"}
                onClick={() => setShowDelete(false)}
                backgroundColor={"transparent"}
                size="lg"
                color={Colors.grey}
                borderColor="transparent"
                borderRadius="0.75rem"
                borderSize="0px"
                fontSize="1rem"
                width="50%"
                margin="2rem 0 0 0 "
              />
              <Button
                label={"Delete"}
                onClick={handleDelete}
                backgroundColor={Colors.red}
                size="lg"
                color="#fff"
                borderColor="transparent"
                borderRadius="0.75rem"
                borderSize="0px"
                fontSize="1rem"
                width="50%"
                margin="2rem 0 0 0 "
              />
            </Flex>
          </ModalBox>
        </ModalContainer>
      )}
    </>
  );
};

export default InvoiceActions;
